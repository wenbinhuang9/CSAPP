# Execution begins at address 0 
	.pos 0
	irmovq stack, %rsp  	# Set up stack pointer
	call main		# Execute main program
	halt			# Terminate program 


# Sample linked list
.align 8
ele1:
    .quad 0x00a
    .quad ele2
ele2:
    .quad 0x0b0
    .quad ele3
ele3:
    .quad 0xc00
    .quad 0

main:	
    irmovq ele1,%rdi
	call rsum_list		# rsum_list(ele1)
	ret

rsum_list:
    pushq %r10
    pushq %r11
    jmp test 


    recursive:
    mrmovq (%rdi), %r10 
    mrmovq 0x8(%rdi), %r11
    rrmovq %r11, %rdi # ls-> ls->next
    call rsum_list
    addq %r10, %rax 
    jmp return

    test: 
    andq %rdi, %rdi  # SET CC
    jne recursive 
    xorq %rax, %rax  # return 0

    return:
    popq %r11
    popq %r10
    ret  #return 

# Stack starts here and grows to lower addresses
	.pos 0x200
stack:

    

